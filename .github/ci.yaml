name: CI Workflow

on:
  pull_request:
    branches: [main]

jobs:
  tests:
    name: Run Tests
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ['3.10', '3.11', '3.12']
        architecture: [arm64]
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install FFmpeg
      if: startsWith(matrix.os, 'ubuntu')
      run: sudo apt-get update && sudo apt-get install -y ffmpeg
    - name: Install FFmpeg (macOS)
      if: startsWith(matrix.os, 'macos')
      run: brew install ffmpeg
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
    - name: Install dependencies with Poetry
      run: poetry install --with dev
    - name: Run Tests
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        HF_TOKEN: ${{ secrets.HF_TOKEN }}
      run: |
        poetry run pytest -n auto \
          --cov=src src/tests \
          --log-level=DEBUG \
          --verbose

  pre-commit:
    name: Run Pre-commit
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.10']
        architecture: [arm64]
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 1
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
    - name: Install dependencies with Poetry
      run: poetry install --with dev
    - name: Install Pre-commit
      run: poetry run pre-commit install
    - name: Run Pre-commit Checks
      run: poetry run pre-commit run --all-files
